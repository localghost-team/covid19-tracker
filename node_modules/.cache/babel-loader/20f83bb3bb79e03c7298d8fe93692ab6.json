{"ast":null,"code":"var _jsxFileName = \"/Users/therealyusa/Documents/GitHub/coronavirus-tracker/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Bar, Line } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({\n  data,\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData((await fetchDailyData()));\n    };\n\n    fetchAPI();\n  });\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: \"Infected\",\n        backgroundColor: \"rgba(0, 0, 255, 0.7)\",\n        borderColor: \"#0000FF\",\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: \"Deaths\",\n        backgroundColor: \"rgba(255, 0, 0, 0.7)\",\n        borderColor: \"#FF0000\",\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }) : null;\n\n  const barChart = () => {\n    data.confirmed ? /*#__PURE__*/React.createElement(Bar, {\n      data: {},\n      options: {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 22\n      }\n    }) : null;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 10\n    }\n  }, lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/therealyusa/Documents/GitHub/coronavirus-tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Bar","Line","styles","Chart","data","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","confirmed","label","backgroundColor","borderColor","fill","deaths","barChart","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,GAAT,EAAcC,IAAd,QAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AACnC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,QAAQ,GAAG,YAAY;AAC3BD,MAAAA,YAAY,EAAC,MAAMR,cAAc,EAArB,EAAZ;AACD,KAFD;;AAIAS,IAAAA,QAAQ;AACT,GANQ,CAAT;AAQA,QAAMC,SAAS,GAAGH,SAAS,CAACI,MAAV,gBAChB,oBAAC,IAAD;AACE,IAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAEL,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcA,IAA5B,CADJ;AAEJC,MAAAA,QAAQ,EAAE,CACR;AACEV,QAAAA,IAAI,EAAEE,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEG,UAAAA;AAAF,SAAD,KAAmBA,SAAjC,CADR;AAEEC,QAAAA,KAAK,EAAE,UAFT;AAGEC,QAAAA,eAAe,EAAE,sBAHnB;AAIEC,QAAAA,WAAW,EAAE,SAJf;AAKEC,QAAAA,IAAI,EAAE;AALR,OADQ,EAQR;AACEf,QAAAA,IAAI,EAAEE,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEQ,UAAAA;AAAF,SAAD,KAAgBA,MAA9B,CADR;AAEEJ,QAAAA,KAAK,EAAE,QAFT;AAGEC,QAAAA,eAAe,EAAE,sBAHnB;AAIEC,QAAAA,WAAW,EAAE,SAJf;AAKEC,QAAAA,IAAI,EAAE;AALR,OARQ;AAFN,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADgB,GAsBd,IAtBJ;;AAwBA,QAAME,QAAQ,GAAG,MAAM;AACrBjB,IAAAA,IAAI,CAACW,SAAL,gBAAiB,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAe,MAAA,OAAO,EAAE,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjB,GAAkD,IAAlD;AACD,GAFD;;AAIA,sBAAO;AAAK,IAAA,SAAS,EAAEb,MAAM,CAACoB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCb,SAAnC,CAAP;AACD,CAxCD;;AA0CA,eAAeN,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Bar, Line } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({ data, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  });\n\n  const lineChart = dailyData.length ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: \"Infected\",\n            backgroundColor: \"rgba(0, 0, 255, 0.7)\",\n            borderColor: \"#0000FF\",\n            fill: true,\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: \"Deaths\",\n            backgroundColor: \"rgba(255, 0, 0, 0.7)\",\n            borderColor: \"#FF0000\",\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null;\n\n  const barChart = () => {\n    data.confirmed ? <Bar data={{}} options={{}} /> : null;\n  };\n\n  return <div className={styles.container}>{lineChart}</div>;\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}