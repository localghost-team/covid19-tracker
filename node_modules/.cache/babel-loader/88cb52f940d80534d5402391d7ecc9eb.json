{"ast":null,"code":"import _regeneratorRuntime from\"/Users/therealyusa/Documents/GitHub/COVID-19-Tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/therealyusa/Documents/GitHub/COVID-19-Tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/therealyusa/Documents/GitHub/COVID-19-Tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{fetchDailyData}from\"../../api\";import{Bar,Line}from\"react-chartjs-2\";import styles from\"./Chart.module.css\";var Chart=function Chart(_ref){var _ref$data=_ref.data,confirmed=_ref$data.confirmed,recovered=_ref$data.recovered,deaths=_ref$data.deaths,country=_ref.country;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),dailyData=_useState2[0],setDailyData=_useState2[1];useEffect(function(){var fetchAPI=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=setDailyData;_context.next=3;return fetchDailyData();case 3:_context.t1=_context.sent;(0,_context.t0)(_context.t1);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchAPI(){return _ref2.apply(this,arguments);};}();fetchAPI();},[]);var lineChart=dailyData.length?/*#__PURE__*/React.createElement(Line,{data:{labels:dailyData.map(function(_ref3){var date=_ref3.date;return date;}),datasets:[{data:dailyData.map(function(_ref4){var confirmed=_ref4.confirmed;return confirmed;}),label:\"Infected\",backgroundColor:\"rgba(0, 0, 255, 0.7)\",borderColor:\"#0000FF\",fill:true},{data:dailyData.map(function(_ref5){var deaths=_ref5.deaths;return deaths;}),label:\"Deaths\",backgroundColor:\"rgba(255, 0, 0, 0.7)\",borderColor:\"#FF0000\",fill:true}]},height:125}):null;var barChart=confirmed?/*#__PURE__*/React.createElement(Bar,{data:{labels:[\"Infected\",\"Recovered\",\"Deaths\"],datasets:[{label:\"People\",backgroundColor:[\"rgba(0, 0, 255, 0.7)\",\"rgba(0, 255, 0, 0.7)\",\"rgba(255, 0, 0, 0.7)\"],data:[confirmed.value,recovered.value,deaths.value]}]},options:{legend:{display:false},title:{display:true},text:\"Current state in \"+country},height:125}):null;return/*#__PURE__*/React.createElement(\"div\",{className:styles.container},country?barChart:lineChart);};export default Chart;","map":{"version":3,"sources":["/Users/therealyusa/Documents/GitHub/COVID-19-Tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Bar","Line","styles","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","label","backgroundColor","borderColor","fill","barChart","value","legend","display","title","text","container"],"mappings":"8fAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,cAAT,KAA+B,WAA/B,CACA,OAASC,GAAT,CAAcC,IAAd,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,MAAP,KAAmB,oBAAnB,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAyD,oBAAtDC,IAAsD,CAA9CC,SAA8C,WAA9CA,SAA8C,CAAnCC,SAAmC,WAAnCA,SAAmC,CAAxBC,MAAwB,WAAxBA,MAAwB,CAAdC,OAAc,MAAdA,OAAc,eACnCX,QAAQ,CAAC,EAAD,CAD2B,wCAC9DY,SAD8D,eACnDC,YADmD,eAGrEZ,SAAS,CAAC,UAAM,CACd,GAAMa,CAAAA,QAAQ,2FAAG,+IACfD,YADe,uBACIX,CAAAA,cAAc,EADlB,qHAAH,kBAARY,CAAAA,QAAQ,2CAAd,CAIAA,QAAQ,GACT,CANQ,CAMN,EANM,CAAT,CAQA,GAAMC,CAAAA,SAAS,CAAGH,SAAS,CAACI,MAAV,cAChB,oBAAC,IAAD,EACE,IAAI,CAAE,CACJC,MAAM,CAAEL,SAAS,CAACM,GAAV,CAAc,mBAAGC,CAAAA,IAAH,OAAGA,IAAH,OAAcA,CAAAA,IAAd,EAAd,CADJ,CAEJC,QAAQ,CAAE,CACR,CACEb,IAAI,CAAEK,SAAS,CAACM,GAAV,CAAc,mBAAGV,CAAAA,SAAH,OAAGA,SAAH,OAAmBA,CAAAA,SAAnB,EAAd,CADR,CAEEa,KAAK,CAAE,UAFT,CAGEC,eAAe,CAAE,sBAHnB,CAIEC,WAAW,CAAE,SAJf,CAKEC,IAAI,CAAE,IALR,CADQ,CAQR,CACEjB,IAAI,CAAEK,SAAS,CAACM,GAAV,CAAc,mBAAGR,CAAAA,MAAH,OAAGA,MAAH,OAAgBA,CAAAA,MAAhB,EAAd,CADR,CAEEW,KAAK,CAAE,QAFT,CAGEC,eAAe,CAAE,sBAHnB,CAIEC,WAAW,CAAE,SAJf,CAKEC,IAAI,CAAE,IALR,CARQ,CAFN,CADR,CAoBE,MAAM,CAAE,GApBV,EADgB,CAuBd,IAvBJ,CAyBA,GAAMC,CAAAA,QAAQ,CAAGjB,SAAS,cACxB,oBAAC,GAAD,EACE,IAAI,CAAE,CACJS,MAAM,CAAE,CAAC,UAAD,CAAa,WAAb,CAA0B,QAA1B,CADJ,CAEJG,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,QADT,CAEEC,eAAe,CAAE,CACf,sBADe,CAEf,sBAFe,CAGf,sBAHe,CAFnB,CAOEf,IAAI,CAAE,CAACC,SAAS,CAACkB,KAAX,CAAkBjB,SAAS,CAACiB,KAA5B,CAAmChB,MAAM,CAACgB,KAA1C,CAPR,CADQ,CAFN,CADR,CAeE,OAAO,CAAE,CACPC,MAAM,CAAE,CAAEC,OAAO,CAAE,KAAX,CADD,CAEPC,KAAK,CAAE,CAAED,OAAO,CAAE,IAAX,CAFA,CAGPE,IAAI,CAAE,oBAAsBnB,OAHrB,CAfX,CAoBE,MAAM,CAAE,GApBV,EADwB,CAuBtB,IAvBJ,CAyBA,mBACE,2BAAK,SAAS,CAAEN,MAAM,CAAC0B,SAAvB,EAAmCpB,OAAO,CAAGc,QAAH,CAAcV,SAAxD,CADF,CAGD,CAhED,CAkEA,cAAeT,CAAAA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Bar, Line } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []);\n\n  const lineChart = dailyData.length ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: \"Infected\",\n            backgroundColor: \"rgba(0, 0, 255, 0.7)\",\n            borderColor: \"#0000FF\",\n            fill: true,\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: \"Deaths\",\n            backgroundColor: \"rgba(255, 0, 0, 0.7)\",\n            borderColor: \"#FF0000\",\n            fill: true,\n          },\n        ],\n      }}\n      height={125}\n    />\n  ) : null;\n\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n        datasets: [\n          {\n            label: \"People\",\n            backgroundColor: [\n              \"rgba(0, 0, 255, 0.7)\",\n              \"rgba(0, 255, 0, 0.7)\",\n              \"rgba(255, 0, 0, 0.7)\",\n            ],\n            data: [confirmed.value, recovered.value, deaths.value],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true },\n        text: \"Current state in \" + country,\n      }}\n      height={125}\n    />\n  ) : null;\n\n  return (\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\n  );\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}