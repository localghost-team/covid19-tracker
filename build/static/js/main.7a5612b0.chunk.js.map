{"version":3,"sources":["images/loading.png","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/virus.png","components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","style","backgroundColor","borderColor","borderWidth","boxShadow","cx","card","infected","CardContent","Typography","title","gutterBottom","variant","start","end","value","duration","separator","Date","toLocaleString","image","src","loading","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","fill","height","barChart","options","legend","display","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","key","App","state","fetchedData","setState","this","virus","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a5612b0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.1a47639b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/virus.60dd06b6.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\",\"title\":\"Cards_title__3rXy6\",\"image\":\"Cards_image__10J_3\"};","import React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\nimport styles from \"./Cards.module.css\";\nimport loading from \"../../images/loading.png\";\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return <img className={styles.image} src={loading} />;\n  }\n\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          style={{\n            backgroundColor: \"white\",\n            borderColor: \"rgba(0, 0, 255, 0.7)\",\n            borderWidth: 10,\n            boxShadow: \"3px 3px 3px 3px gray\",\n          }}\n          className={cx(styles.card, styles.infected)}\n        >\n          <CardContent>\n            <Typography className={styles.title} gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant=\"h5\" className={styles.title}>\n              <CountUp\n                start={0}\n                end={confirmed.value}\n                duration={1}\n                separator=\".\"\n              />\n            </Typography>\n            <Typography className={styles.title}>\n              {new Date(lastUpdate).toLocaleString()}\n            </Typography>\n            <Typography variant=\"body2\" className={styles.title}>\n              Number of active cases of COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          style={{\n            backgroundColor: \"white\",\n            borderColor: \"rgba(0, 255, 0, 0.7)\",\n            borderWidth: 10,\n            boxShadow: \"3px 3px 3px 3px gray\",\n          }}\n          className={cx(styles.card, styles.recovered)}\n        >\n          <CardContent>\n            <Typography className={styles.title} gutterBottom>\n              Recovered\n            </Typography>\n            <Typography variant=\"h5\" className={styles.title}>\n              {\" \"}\n              <CountUp\n                start={0}\n                end={recovered.value}\n                duration={1}\n                separator=\".\"\n              />\n            </Typography>\n            <Typography className={styles.title}>\n              {\" \"}\n              {new Date(lastUpdate).toLocaleString()}\n            </Typography>\n            <Typography variant=\"body2\" className={styles.title}>\n              Number of recoveries from COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          style={{\n            backgroundColor: \"white\",\n            borderColor: \"rgba(255, 0, 0, 0.7)\",\n            borderWidth: 10,\n            boxShadow: \"3px 3px 3px 3px gray\",\n          }}\n          className={cx(styles.card, styles.deaths)}\n        >\n          <CardContent>\n            <Typography className={styles.title} gutterBottom>\n              Deaths\n            </Typography>\n            <Typography variant=\"h5\" className={styles.title}>\n              {\" \"}\n              <CountUp\n                start={0}\n                end={deaths.value}\n                duration={1}\n                separator=\".\"\n              />\n            </Typography>\n            <Typography className={styles.title}>\n              {\" \"}\n              {new Date(lastUpdate).toLocaleString()}\n            </Typography>\n            <Typography variant=\"body2\" className={styles.title}>\n              Number of deaths caused by COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n","import axios from \"axios\";\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = url + \"/countries/\" + country;\n  }\n\n  try {\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate },\n    } = await axios.get(changeableUrl);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    console.log(\"Error when fetching data: \" + error);\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(url + \"/daily\");\n\n    const modifiedData = data.map((dailyData) => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate,\n    }));\n\n    return modifiedData;\n  } catch (error) {\n    console.log(\"Fetch daily data error: \" + error);\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: { countries },\n    } = await axios.get(url + \"/countries\");\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    console.log(\"Fetch countries error:\" + error);\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Bar, Line } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []);\n\n  const lineChart = dailyData.length ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: \"Infected\",\n            backgroundColor: \"rgba(0, 0, 255, 0.7)\",\n            borderColor: \"#0000FF\",\n            fill: true,\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: \"Deaths\",\n            backgroundColor: \"rgba(255, 0, 0, 0.7)\",\n            borderColor: \"#FF0000\",\n            fill: true,\n          },\n        ],\n      }}\n      height={125}\n    />\n  ) : null;\n\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n        datasets: [\n          {\n            label: \"People\",\n            backgroundColor: [\n              \"rgba(0, 0, 255, 0.7)\",\n              \"rgba(0, 255, 0, 0.7)\",\n              \"rgba(255, 0, 0, 0.7)\",\n            ],\n            data: [confirmed.value, recovered.value, deaths.value],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true },\n        text: \"Current state in \" + country,\n      }}\n      height={125}\n    />\n  ) : null;\n\n  return (\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\n  );\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from \"react\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\nimport styles from \"./CountryPicker.module.css\";\nimport { fetchCountries } from \"../../api\";\n\nconst CountryPicker = ({ handleCountryChange }) => {\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, [setFetchedCountries]);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect\n        defaultValue=\"\"\n        onChange={(e) => handleCountryChange(e.target.value)}\n      >\n        <option value=\"\">Global</option>\n        {fetchedCountries.map((country, key) => (\n          <option key={key} value={country}>\n            {country}\n          </option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default CountryPicker;\n","import React from \"react\";\nimport { Cards, Chart, CountryPicker } from \"./components\";\nimport styles from \"./App.module.css\";\nimport { fetchData } from \"./api\";\nimport virus from \"./images/virus.png\";\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: \"\",\n  };\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n\n    this.setState({ data: fetchedData });\n\n    console.log(\"URL response: \" + fetchedData);\n  }\n\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n\n    this.setState({ data: fetchedData, country: country });\n\n    console.log(fetchedData);\n  };\n\n  render() {\n    const { data, country } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <img className={styles.image} src={virus} />\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};"],"sourceRoot":""}